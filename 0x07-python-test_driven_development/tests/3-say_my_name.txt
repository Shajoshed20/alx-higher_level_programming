Test Case for 3-say_my_name.py
===========================

This modules defines a function ``say_my_name(first_name, last_name="")``.

Valid Cases
===========

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Eden", "Joseph")
    My name is Eden Joseph

::

    >>> say_my_name("Mary Jane", "Alex")
    My name is Mary Jane Alex

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Sharon")
    My name is Sharon 

Invalid Cases
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "John")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Angel", ["Mckay", "Alyia", "Rose"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Austin": 9, "Maggie": 36}, 8.9)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.
::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string
